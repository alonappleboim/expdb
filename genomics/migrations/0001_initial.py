# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-21 06:12
from __future__ import unicode_literals

import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload_time', models.DateField(auto_now=True)),
                ('file', models.FileField(storage=django.core.files.storage.FileSystemStorage(location='/Users/user/Dropbox/workspace/expdb/files/'), upload_to='meta/')),
                ('description', models.TextField(blank=True, max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='ModelWithFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequencing_date', models.DateField(verbose_name='sequencing date')),
                ('fastq', models.FileField(storage=django.core.files.storage.FileSystemStorage(location='/Users/user/Dropbox/workspace/expdb/files/'), upload_to='fastq/')),
                ('comment', models.TextField(blank=True, max_length=2000)),
                ('seqeunced_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sequenced_samples', to='genomics.Member')),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(max_length=2000)),
                ('generation_code', models.FileField(help_text='A tar archive containing a script to generate the track from the sample fastq, with all relevant programs, versions, parameters, etc.', storage=django.core.files.storage.FileSystemStorage(location='/Users/user/Dropbox/workspace/expdb/files/'), upload_to='track_generation_code/')),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tracks', to='genomics.Sample')),
            ],
        ),
        migrations.CreateModel(
            name='TrackType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('format_description', models.TextField(help_text='either a text explaining the format, or a link to such an explanation')),
            ],
        ),
        migrations.CreateModel(
            name='Value',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('string_value', models.CharField(max_length=100)),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='genomics.Sample')),
            ],
        ),
        migrations.CreateModel(
            name='Variable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('STR', 'string'), ('INT', 'integer'), ('FLT', 'float')], default='STR', max_length=3)),
                ('units', models.CharField(max_length=100)),
                ('samples', models.ManyToManyField(through='genomics.Value', to='genomics.Sample')),
            ],
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('modelwithfile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='genomics.ModelWithFile')),
                ('performed_on', models.DateField(help_text='the date on which experiment was perfomed', verbose_name='on')),
                ('title', models.CharField(help_text='short description of the experiment (max 120 chars)', max_length=120)),
                ('description', models.TextField(max_length=2000)),
                ('pub_url', models.URLField(blank=True, help_text='if published, link to publication', verbose_name='publication url')),
                ('data_url', models.URLField(blank=True, help_text='if data is published, link to data repository entry')),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='experiments', to='genomics.Member')),
                ('variables', models.ManyToManyField(to='genomics.Variable')),
            ],
            bases=('genomics.modelwithfile',),
        ),
        migrations.CreateModel(
            name='Genotype',
            fields=[
                ('modelwithfile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='genomics.ModelWithFile')),
                ('short_name', models.CharField(max_length=60)),
                ('string', models.TextField(help_text='string describing the complete genotype unambiguously')),
            ],
            bases=('genomics.modelwithfile',),
        ),
        migrations.CreateModel(
            name='Protocol',
            fields=[
                ('modelwithfile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='genomics.ModelWithFile')),
                ('short_name', models.CharField(max_length=60)),
                ('description', models.TextField(max_length=2000)),
                ('pub_url', models.URLField(blank=True, help_text='if published, link to protocol', verbose_name='publication url')),
            ],
            bases=('genomics.modelwithfile',),
        ),
        migrations.AddField(
            model_name='value',
            name='var',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='value_set', to='genomics.Variable'),
        ),
        migrations.AddField(
            model_name='track',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tracks', to='genomics.TrackType'),
        ),
        migrations.AddField(
            model_name='sample',
            name='variables',
            field=models.ManyToManyField(through='genomics.Value', to='genomics.Variable'),
        ),
        migrations.AddField(
            model_name='file',
            name='attached_to',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_files', to='genomics.ModelWithFile'),
        ),
        migrations.AddField(
            model_name='sample',
            name='experiment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='samples', to='genomics.Experiment'),
        ),
        migrations.AddField(
            model_name='sample',
            name='genotype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='samples', to='genomics.Genotype'),
        ),
        migrations.AddField(
            model_name='sample',
            name='protocol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='samples', to='genomics.Protocol'),
        ),
    ]
